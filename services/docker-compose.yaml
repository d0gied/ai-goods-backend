version: "3"
services:
  # api:
  #   build: ./api
  #   ports:
  #     - "5000:5000"

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER # set in .env file
      - RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS # set in .env file
      - REDIS_URL=redis://redis:6379/0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data

  flower:
    image: mher/flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=amqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@rabbitmq:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - rabbitmq
      - redis

  postgres:
    image: postgres:11.1-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=$POSTGRES_USER # set in .env file
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD # set in .env file
      - POSTGRES_DB=$POSTGRES_DB # set in .env file
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=$PGADMIN_DEFAULT_EMAIL # set in .env file
      - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD # set in .env file
    depends_on:
      - postgres
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin

  api:
    image: goodsai-api
    container_name: api
    build:
      args:
        - TARGET_SERVICE=api
    ports:
      - "8585:5000"
    command: uvicorn run:app --host ${HOST:-0.0.0.0} --port ${PORT:-5000} --reload
    environment:
      - DATABASE_URL=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
      - CELERY_BROKER_URL=pyamqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@rabbitmq:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - redis
  
  parser_worker:
    image: goodsai-parser
    container_name: parser_worker
    build:
      args:
        - TARGET_SERVICE=parser
    command: celery -A run worker -l info -n parser_worker@%h --concurrency=4 -Q parser
    environment:
      - CELERY_BROKER_URL=pyamqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@rabbitmq:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env
  
  agent_worker:
    image: goodsai-agent
    container_name: agent_worker
    build:
      args:
        - TARGET_SERVICE=agent
    command: celery -A run worker -l info -n agent_worker@%h --concurrency=4 -Q agent
    environment:
      - CELERY_BROKER_URL=pyamqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@rabbitmq:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env
  
  ml_worker:
    image: goodsai-ml
    container_name: ml_worker
    build:
      args:
        - TARGET_SERVICE=ML
    command: celery -A run worker -l info -n ml_worker@%h --concurrency=4 -Q ml
    environment:
      - CELERY_BROKER_URL=pyamqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@rabbitmq:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env

  vector_storage:
    image: goodsai-vector-storage
    container_name: vector_storage
    build:
      args:
        - TARGET_SERVICE=vector_storage
    command: celery -A run worker -l info -n vector_storage_worker@%h --concurrency=4 -Q storage
    environment:
      - CELERY_BROKER_URL=pyamqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@rabbitmq:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - rabbitmq
      - redis
    volumes:
      - ./data/vector_storage:/app/vector_storage/storage
    env_file:
      - .env